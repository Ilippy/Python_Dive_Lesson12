import module


# Создайте класс-функцию, который считает факториал числа при вызове экземпляра.
# Экземпляр должен запоминать последние k значений.
# Параметр k передаётся при создании экземпляра.
# Добавьте метод для просмотра ранее вызываемых значений и их факториалов.
def task1():
    module.task1.main()


# Доработаем задачу 1.
# Создайте менеджер контекста, который при выходе сохраняет значения в JSON файл.
def task2():
    module.task2.main()


# Создайте класс-генератор.
# Экземпляр класса должен генерировать факториал числа в диапазоне от start до stop с шагом step.
# Если переданы два параметра, считаем step=1.
# Если передан один параметр, также считаем start=1.
def task3():
    module.task3.main()


# Доработайте класс прямоугольник из прошлых семинаров.
# Добавьте возможность изменять длину и ширину прямоугольника
# и встройте контроль недопустимых значений(отрицательных).
# Используйте декораторы свойств.
# Доработаем прямоугольник и добавим экономию памяти для хранения свойств экземпляра без словаря __dict__.
def task4():
    module.task4.main()


# Изменяем класс прямоугольника.
# Заменяем пару декораторов проверяющих длину и ширину на дескриптор с валидацией размера.
def task5():
    module.task5.main()


def main():
    # task1()
    # task2()
    # task3()
    # task4()
    task5()


if __name__ == '__main__':
    main()
